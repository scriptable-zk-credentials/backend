//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Serialize, Deserialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "credential")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub holder_id: u32,
    pub schema_id: u32,
    pub details: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::credential_instance::Entity")]
    CredentialInstance,
    #[sea_orm(
        belongs_to = "super::holder::Entity",
        from = "Column::HolderId",
        to = "super::holder::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Holder,
}

impl Related<super::credential_instance::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CredentialInstance.def()
    }
}

impl Related<super::holder::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Holder.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
